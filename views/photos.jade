extends layout

block content
	script.
		$(function() {
			$('#photo_galleries_admin li:first').toggleClass('current');
			$('#photo_galleries_admin .tab-content:first').toggleClass('current');
			$('ul.tabs li').click(function(){
				var tab_id = $(this).attr('data-tab');

				$('ul.tabs li').removeClass('current');
				$('.tab-content').removeClass('current');

				$(this).addClass('current');
				$("#"+tab_id).addClass('current');
			})

			$('.gallery_selector').on('change', function(){
				var photo_id = $(this).attr('photo_id');
				var gallery_id = $(this).find(":selected").val();//('gallery_id');
				console.log(photo_id, gallery_id);
				$.ajax({
					url: '/photos/'+photo_id,
					type: 'PUT',
					data: {
						gallery_id: gallery_id
					},
					success: function(data){
						location.reload();
					}
				});
			});
			$('.gallery_title_admin').on('click', function() {
				$(this).parent().toggleClass('active');
			});
			$('#photo_upload_button').on('click', function(){
				var files = $('#photo_upload_input').get(0).files;

				if (files.length > 0){
					// One or more files selected, process the file upload

					// create a FormData object which will be sent as the data payload in the
					// AJAX request
					var formData = new FormData();

					// loop through all the selected files
					for (var i = 0; i < files.length; i++) {
						var file = files[i];

						// add the files to formData object for the data payload
						formData.append('uploads[]', file, file.name);
					}

					formData.append('gallery_id', $('#photo_upload_gallery_selector').find(':selected').val());

					$.ajax({
						url: '/photos',
						type: 'POST',
						data: formData,
						processData: false,
						contentType: false,
						success: function(data){
							console.log('upload successful!');
						},
						xhr: function() {
							// create an XMLHttpRequest
							var xhr = new XMLHttpRequest();

							// listen to the 'progress' event
							xhr.upload.addEventListener('progress', function(evt) {

								if (evt.lengthComputable) {
									// calculate the percentage of upload completed
									var percentComplete = evt.loaded / evt.total;
									percentComplete = parseInt(percentComplete * 100);

									// update the Bootstrap progress bar with the new percentage
									$('.progress-bar').text(percentComplete + '%');
									$('.progress-bar').width(percentComplete + '%');

									// once the upload reaches 100%, set the progress bar text to done
									if (percentComplete === 100) {
										$('.progress-bar').html('Done');
										location.reload();
									}

								}

							}, false);

							return xhr;
						}
					});
				}
			});
		});

	#gallery_body
		#gallery_content.admin
			
			div
				h2 Загрузить фотографии
				.progress-bar(role="progressbar")
						
				input#photo_upload_input(type="file", name="uploads[]" multiple="multiple")
				button#photo_upload_button(type="button") Загрузить	
				div
					label Папка
					select#photo_upload_gallery_selector
						each gallery in galleries
							option(value="#{gallery._id}") #{gallery.title}

			div#photo_galleries_admin
				ul.tabs
					each gallery, index in galleries
						li.tab-link(data-tab="tab-#{index}") #{gallery.title} (#{gallery.photos.length} фото)
				each gallery, index in galleries
					div(id="tab-#{index}", class="tab-content")
						div.gallery_admin
							div.gallery_photos_admin
								each gallery_photo in gallery.photos
									div.gallery_photo_admin
										img(src="https://res.cloudinary.com/hf7ourhvw/image/upload/#{gallery_photo.cloudinary_public_id}", height="200")
										br
										select.gallery_selector(photo_id="#{gallery_photo._id}")
											each gallery in galleries
												if (gallery_photo.gallery_id.toString() === gallery._id.toString())
													option(value="#{gallery._id}", selected=true) #{gallery.title}
												else
													option(value="#{gallery._id}") #{gallery.title}


					


					